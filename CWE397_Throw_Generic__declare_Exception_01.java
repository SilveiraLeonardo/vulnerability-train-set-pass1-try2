
import testcasesupport.AbstractTestCase;
import testcasesupport.IO;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.FileInputStream;
import java.util.logging.Level;

public class C397_Throw_Generic__declare_Exception_01 extends AbstractTestCase 
{
    public void bad(String filePath) throws FileNotFoundException, IOException 
    {
        try (FileInputStream streamFileInput = new FileInputStream(filePath)) 
        {
            IO.writeLine("File '" + filePath + "' exists");
        } 
        catch (IOException exceptIO) 
        {
            IO.logger.log(Level.WARNING, "Error closing FileInputStream", exceptIO);
        }
    }

    private void good1(String filePath) throws FileNotFoundException, IOException 
    {
        try (FileInputStream streamFileInput = new FileInputStream(filePath)) 
        {
            IO.writeLine("File '" + filePath + "' exists");
        } 
        catch (IOException exceptIO) 
        {
            IO.logger.log(Level.WARNING, "Error closing FileInputStream", exceptIO);
        }
    }

    public void good(String filePath) throws FileNotFoundException, IOException
    {
        good1(filePath);
    }

    public static void main(String[] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException, FileNotFoundException, IOException
    {
        mainFromParent(args);
        String filePath = "filename.txt";
        new C397_Throw_Generic__declare_Exception_01().good(filePath);
    }
}
