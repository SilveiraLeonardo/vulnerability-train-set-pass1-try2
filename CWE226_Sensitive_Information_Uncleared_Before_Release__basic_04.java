
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.logging.Level;

public class C226_Sensitive_Information_Uncleared_Before_Release {
    
    public static void main(String[] args) {
        try {
            good();
        } catch (Throwable throwable) {
            throwable.printStackTrace();
        }
    }

    public static void good() throws Throwable {
        Connection dBConnection = null;
        InputStreamReader readerInputStream = null;
        BufferedReader readerBuffered = null;
        
        try {
            // Read database_url, username, and password from environment variables
            String database_url = System.getenv("DB_URL");
            String username = System.getenv("DB_USERNAME");
            String password = System.getenv("DB_PASSWORD");
            
            readerInputStream = new InputStreamReader(System.in, StandardCharsets.UTF_8);
            readerBuffered = new BufferedReader(readerInputStream);
            
            if(database_url == null || username == null || password == null) {
                System.out.println("Please set the DB_URL, DB_USERNAME and DB_PASSWORD environment variables.");
                return;
            }

            dBConnection = DriverManager.getConnection(database_url, username, password);
        }
        catch (IOException exceptIO) {
            System.out.println("Error with stream reading: " + exceptIO.getMessage());
        }
        catch (SQLException exceptSql) {
            System.out.println("Error getting database connection: " + exceptSql.getMessage());
        }
        finally {
            try {
                if (dBConnection != null) {
                    dBConnection.close();
                }
            }
            catch (SQLException exceptSql) {
                System.out.println("Error closing Connection: " + exceptSql.getMessage());
            }

            try {
                if (readerBuffered != null) {
                    readerBuffered.close();
                }
            }
            catch (IOException exceptIO) {
                System.out.println("Error closing BufferedReader: " + exceptIO.getMessage());
            }

            try {
                if (readerInputStream != null) {
                    readerInputStream.close();
                }
            }
            catch (IOException exceptIO) {
                System.out.println("Error closing InputStreamReader: " + exceptIO.getMessage());
            }
        }
    }
}
