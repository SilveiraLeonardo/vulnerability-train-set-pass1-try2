
const config = require("../config");
const dummy = require("../dummy");
const pgp = require('pg-promise')();
const bcrypt = require('bcrypt');
const Promise = require('bluebird');

async function init_db() {
    const db = pgp(config.db.connectionString);

    try {
        await db.none('CREATE TABLE users(name VARCHAR(100) PRIMARY KEY, password VARCHAR(255));');

        await Promise.map(dummy.users, async (u) => {
            const passwordHash = await bcrypt.hash(u.password, 10);
            return db.none('INSERT INTO users(name, password) VALUES ($1, $2)', [u.username, passwordHash]);
        });

    } catch (err) {
        console.error('Error creating users table:', err);
    }

    try {
        await db.none('CREATE TABLE products(id SERIAL PRIMARY KEY, name VARCHAR(100) NOT NULL, description TEXT NOT NULL, price INTEGER, image VARCHAR(500));');

        await Promise.map(dummy.products, (p) => {
            return db.none('INSERT INTO products(name, description, price, image) VALUES ($1, $2, $3, $4)', [p.name, p.description, p.price, p.image]);
        });

    } catch (err) {
        console.error('Error creating products table:', err);
    }

    try {
        await db.none('CREATE TABLE purchases(id SERIAL PRIMARY KEY, product_id INTEGER NOT NULL, product_name VARCHAR(100) NOT NULL, user_name VARCHAR(100), mail VARCHAR(100) NOT NULL, address VARCHAR(100) NOT NULL, phone VARCHAR(40) NOT NULL, ship_date VARCHAR(100) NOT NULL, price INTEGER NOT NULL);');
    } catch (err) {
        console.error('Error creating purchases table:', err);
    }
}

module.exports = init_db;
