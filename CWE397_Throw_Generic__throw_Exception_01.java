
import java.io.IOException;

public class C397_Throw_Specific__throw_Exception_01
{
    public void bad() throws IOException
    {
        throw new IOException("An I/O error occurred");
    }

    private void good1() throws FileNotFoundException
    {
        throw new FileNotFoundException();
    }

    public void good() throws FileNotFoundException
    {
        good1();
    }

    public static class CustomException extends RuntimeException 
    {
        public CustomException(String message, Throwable cause) 
        {
            super(message, cause);
        }
    }

    public static void main(String[] args) throws CustomException
    {
        try 
        {
            mainFromParent(args);
        } 
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) 
        {
            throw new CustomException("Error occurred in main()", e);
        }
    }

    // Note: Provided code block didn't have the mainFromParent method, so I added a skeleton method to be implemented.
    public static void mainFromParent(String[] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException 
    {
        // Implementation goes here
    }
}
