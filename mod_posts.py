
import sqlite3
import re
from flask import Blueprint, render_template, redirect, request, g, flash

import libposts
import libuser

mod_posts = Blueprint("mod_posts", __name__, template_folder="templates")


def validate_username(username):
    # Allow only alphanumeric characters, underscores, and hyphens; limit length to 2-15 characters.
    pattern = r"^[a-zA-Z0-9_-]{2,15}$"
    return re.match(pattern, username)


def validate_text(text):
    # Limit post text length to 300 characters.
    return len(text) <= 300


@mod_posts.route("/")
@mod_posts.route("/<username>")
def do_view(username=None):

    if not username:
        if "username" in g.session:
            username = g.session["username"]

    if not validate_username(username):
        flash("Invalid username.")
        return redirect("/")

    posts = libposts.get_posts(username)
    users = libuser.userlist()

    return render_template("posts.view.html", posts=posts, username=username, users=users)


@mod_posts.route("/", methods=["POST"])
def do_create():

    if "username" not in g.session:
        return redirect("/user/login")

    if request.method == "POST":

        username = g.session["username"]
        text = request.form.get("text")

        # Validate username and text
        if not validate_username(username):
            flash("Invalid username.")
            return redirect("/")
        if not validate_text(text):
            flash("Invalid text input. Max length is 300 characters.")
            return redirect("/")

        libposts.post(username, text)

    return redirect("/")


