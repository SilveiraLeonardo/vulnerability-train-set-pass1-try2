
const { ApolloServer, gql } = require('apollo-server');
const fs = require('fs');
const path = require('path');

const typeDefs = gql`
  type Book {
    title: String
    author: String
  }

  type Query {
    books(inputPath: String): [Book]
  }
`;

const books = [
  {
    title: 'The Awakening',
    author: 'Kate Chopin',
  },
  {
    title: 'City of Glass',
    author: 'Paul Auster',
  },
];

const resolvers = {
  Query: {
    books: (parent, args, context, info) => {
      const file = readFile(args.inputPath).toString()
      console.log(file)
      return [{ title: file, author: "hello" }]
    },
  },
};

function readFile(inputPath) {
  let normalizedPath = path.normalize(inputPath);
  let basePath = "your/allowed/base/path/";
  let targetPath = path.join(basePath, normalizedPath);

  if (targetPath.indexOf(basePath) !== 0) {
    throw new Error("Invalid path provided");
  }

  const allowedExtension = ".json";

  if (path.extname(inputPath).toLowerCase() !== allowedExtension) {
    throw new Error(`File type not allowed. Allowed extensions: ${allowedExtension}`);
  }

  result = fs.readFileSync(targetPath);
  return result;
}

const isProduction = process.env.NODE_ENV === "production";
const server = new ApolloServer({
  introspection: !isProduction,
  typeDefs,
  resolvers
});

server.listen().then(({ url }) => {
  console.log(`ğŸš€  Server ready at ${url}`);
});
